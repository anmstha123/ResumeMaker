@model Resume.Models.ResumeData
<!-- Views/Pdf/Index.cshtml -->
<style>
    button:focus {
        outline: none !important;
    }

    #educationFields{
        height: 16em;
        overflow-y:scroll;
    }
</style>


<head>

    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.css" />
    <link rel="stylesheet" href="~/css/Pdf.css" />
</head>


<div class="d-flex flex-column align-items-center h-100">
    <div class="d-flex flex-column align-items-center" style="width: 80%;">
        <div class="d-flex flex-column w-100 align-items-center">
            <div class="col-md-6 col-md-offset-3" style="height: 20em;">
                <form id="resumeForm">
                    <div class="tab">
                        <h1>Contact</h1>
                        <div class="d-flex flex-row justify-content-center align-items-center gap-4 mb-2">
                            <div class="input-group input-group-lg mb-2">
                                <input type="text" name="firstName" class="form-control" placeholder="First Name" id="firstName">
                            </div>
                            <div class="input-group input-group-lg mb-2">
                                <input type="text" name="lastName" class="form-control" placeholder="Last Name" id="lastName">
                            </div>
                        </div>
                        <div class="d-flex flex-row justify-content-center align-items-center gap-4 mb-2">
                            <div class="input-group input-group-lg mb-2">
                                <input type="text" name="jobTitle" class="form-control" id="jobTitle" placeholder="Job Title">
                            </div>
                        </div>
                        <div class="d-flex flex-row justify-content-center align-items-center gap-4 mb-2">
                            <div class="input-group input-group-lg mb-2">
                                <input type="text" name="city" class="form-control" id="city" placeholder="City">
                            </div>
                            <div class="input-group input-group-lg mb-2">
                                <input type="text" name="state" class="form-control" id="state" placeholder="State/Province">
                            </div>
                            <div class="input-group input-group-lg mb-2">
                                <input type="text" name="zipCode" class="form-control" id="zipCode" placeholder="Zip Code">
                            </div>
                        </div>
                        <div class="d-flex flex-row justify-content-center align-items-center gap-4 mb-2">
                            <div class="input-group input-group-lg mb-2">
                                <input type="text" name="phone" class="form-control" id="phone" placeholder="Phone">
                            </div>
                            <div class="input-group input-group-lg mb-2">
                                <input type="text" name="email" class="form-control" id="email" placeholder="Email">
                            </div>
                        </div>
                    </div>
                    <div class="tab">
                        <h1>Education</h1>
                        <div id="educationFields">
                            @Html.Partial("_EducationFieldPartial", new Resume.Models.Education())
                        </div>
                        <div class="d-flex flex-row justify-content-between align-items-center">
                            <button type="button" class="btn btn-sm btn-primary" id="addEducation">Add</button>
                            <button type="button" class="btn btn-sm btn-danger" id="removeEducation">Remove</button>
                        </div>

                     </div>

                    <div class="tab">
                        <h1>Experience</h1>
                        <div id="experienceFields">
                            @Html.Partial("_ExperienceFieldPartial", new Resume.Models.Experience())
                        </div>
                        <div class="d-flex flex-row justify-content-between align-items-center">
                            <button type="button" class="btn btn-sm btn-primary" id="addExperience">Add</button>
                            <button type="button" class="btn btn-sm btn-danger" id="removeExperience">Remove</button>
                        </div>
                    </div>
                </form>
            </div>
            <br />
            <div class="d-flex flex-row justify-content-center align-items-center" style="width: 100%">
                <div class="d-flex flex-row justify-content-between align-items-center" id="nextPrevBtn">
                    <button type="button" class="btn btn-secondary" id="prevBtn">Previous</button>
                    <button type="button" class="btn btn-primary" id="nextBtn">Next</button>
                </div>
                
            </div>
            <!-- Circles which indicates the steps of the form: -->
            <div style="text-align:center;margin-top:40px;">
                <span class="step"></span>
                <span class="step"></span>
                <span class="step"></span>
            </div>
        </div>
        <div id="endOfForm" style="display: none">
            <h1>Thank you for using Resume Maker</h1>
            <a href="/Pdf">Make another resume</a>
        </div>
    </div>
</div>



<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

<script>
    $(document).ready(function () {
        var currentTab = 0;
        showTab(currentTab);

        function showTab(n) {
            var x = $(".tab");
            x.eq(n).css("display", "block");

            if (n == 0) {
                $("#prevBtn").css("display", "none");
                $("#nextPrevBtn").css("width","");
            } else {
                $("#prevBtn").css("display", "inline");
                $("#nextPrevBtn").css("width","10em");
            }

            if (n == x.length - 1) {
                $("#nextBtn").html("Submit");
            } else {
                $("#nextBtn").html("Next");
            }

            fixStepIndicator(n);
        }

        function nextPrev(n) {
            var x = $(".tab");
            x.eq(currentTab).css("display", "none");

            if (currentTab >= x.length) {
                // Do nothing if currentTab is out of bounds
                return;
            }

            currentTab += n;

            if (currentTab >= x.length) {
                $("#prevBtn").css("display", "none");
                $("#nextBtn").css("display", "none");
                $(".step").hide();

                $("#endOfForm").css("display", "inline");

                // If the currentTab is out of bounds after incrementing, trigger form submission
                submitForm();
                return;
            }

            showTab(currentTab);
        }

        function fixStepIndicator(n) {
            var x = $(".step");
            x.removeClass("active");
            x.eq(n).addClass("active");
        }

        function submitForm() {
            var resumeData = {
                State: $("#state").val(),
                Education: [],
                Email: $("#email").val(),
                Phone: $("#phone").val(),
                FirstName: $("#firstName").val(),
                LastName: $("#lastName").val(),
                Experiences: []
            };

            $(".educationForm").each(function () {
                var degree = $(this).find("input[name=Degree]").val();
                var fieldOfStudy = $(this).find("input[name=FieldOfStudy]").val();
                var institution = $(this).find("input[name=Institution]").val();
                var year = $(this).find("input[name=Year]").val();

                var educationObj = {
                    Degree: degree,
                    FieldOfStudy: fieldOfStudy,
                    Institution: institution,
                    Year: year
                };

                resumeData.Education.push(educationObj);
            });


            $.ajax({
                type: "POST",
                url: '/Pdf/DownloadPdf',
                data: JSON.stringify(resumeData),
                contentType: "application/json; charset=utf-8",
                xhrFields: {
                    responseType: 'blob'
                },
                success: function (data) {
                    var blob = new Blob([data], { type: 'application/pdf' });
                    var link = document.createElement('a');
                    link.href = window.URL.createObjectURL(blob);
                    link.download = 'downloaded.pdf';
                    link.click();
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
        }


        $("#nextBtn").on("click", function () {
            nextPrev(1);
        });

        $("#prevBtn").on("click", function () {
            nextPrev(-1);
        });

        $("#addEducation").click(function () {
            $.ajax({
                type: "GET", 
                url: "@Url.Action("AddEducationField", "Pdf")", 
                dataType: "html",
                success: function (partialView) {
                    $("#educationFields").append(partialView);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error("Error loading partial view:", textStatus, errorThrown);
                }
            });
        });

        $("#addExperience").click(function () {
            $.ajax({
                type: "GET",
                url: "@Url.Action("AddExperienceField", "Pdf")",
                dataType: "html",
                success: function (partialView) {
                    $("#experienceFields").append(partialView);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.error("Error loading partial view:", textStatus, errorThrown);
                }
            });
        });

        $("#removeEducation").click(function () {
            $(".educationForm").last().remove();
        });

        $("#removeExperience").click(function () {
            $(".experienceForm").last().remove();
        });
    });

</script>
